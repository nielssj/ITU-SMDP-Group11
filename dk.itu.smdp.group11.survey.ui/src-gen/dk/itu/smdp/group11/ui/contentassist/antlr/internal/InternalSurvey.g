/*
* generated by Xtext
*/
grammar InternalSurvey;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package dk.itu.smdp.group11.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package dk.itu.smdp.group11.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import dk.itu.smdp.group11.services.SurveyGrammarAccess;

}

@parser::members {
 
 	private SurveyGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(SurveyGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleSurvey
entryRuleSurvey 
:
{ before(grammarAccess.getSurveyRule()); }
	 ruleSurvey
{ after(grammarAccess.getSurveyRule()); } 
	 EOF 
;

// Rule Survey
ruleSurvey
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSurveyAccess().getGroup()); }
(rule__Survey__Group__0)
{ after(grammarAccess.getSurveyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQuestion
entryRuleQuestion 
:
{ before(grammarAccess.getQuestionRule()); }
	 ruleQuestion
{ after(grammarAccess.getQuestionRule()); } 
	 EOF 
;

// Rule Question
ruleQuestion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQuestionAccess().getGroup()); }
(rule__Question__Group__0)
{ after(grammarAccess.getQuestionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContent
entryRuleContent 
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentAccess().getGroup()); }
(rule__Content__Group__0)
{ after(grammarAccess.getContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnswer
entryRuleAnswer 
:
{ before(grammarAccess.getAnswerRule()); }
	 ruleAnswer
{ after(grammarAccess.getAnswerRule()); } 
	 EOF 
;

// Rule Answer
ruleAnswer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnswerAccess().getGroup()); }
(rule__Answer__Group__0)
{ after(grammarAccess.getAnswerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Survey__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getIntroKeyword_1_0()); }

	'Intro' 

{ after(grammarAccess.getSurveyAccess().getIntroKeyword_1_0()); }
)

    |(
{ before(grammarAccess.getSurveyAccess().getIntroKeyword_1_1()); }

	'intro' 

{ after(grammarAccess.getSurveyAccess().getIntroKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getOutroKeyword_5_0()); }

	'Outro' 

{ after(grammarAccess.getSurveyAccess().getOutroKeyword_5_0()); }
)

    |(
{ before(grammarAccess.getSurveyAccess().getOutroKeyword_5_1()); }

	'outro' 

{ after(grammarAccess.getSurveyAccess().getOutroKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Survey__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__0__Impl
	rule__Survey__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getSurveyKeyword_0()); }

	'Survey' 

{ after(grammarAccess.getSurveyAccess().getSurveyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__1__Impl
	rule__Survey__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getAlternatives_1()); }
(rule__Survey__Alternatives_1)
{ after(grammarAccess.getSurveyAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__2__Impl
	rule__Survey__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getIntroAssignment_2()); }
(rule__Survey__IntroAssignment_2)
{ after(grammarAccess.getSurveyAccess().getIntroAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__3__Impl
	rule__Survey__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getQuestionsAssignment_3()); }
(rule__Survey__QuestionsAssignment_3)
{ after(grammarAccess.getSurveyAccess().getQuestionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__4__Impl
	rule__Survey__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getQuestionsAssignment_4()); }
(rule__Survey__QuestionsAssignment_4)*
{ after(grammarAccess.getSurveyAccess().getQuestionsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__5__Impl
	rule__Survey__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getAlternatives_5()); }
(rule__Survey__Alternatives_5)
{ after(grammarAccess.getSurveyAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Survey__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Survey__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getOutroAssignment_6()); }
(rule__Survey__OutroAssignment_6)
{ after(grammarAccess.getSurveyAccess().getOutroAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Question__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__0__Impl
	rule__Question__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }

	'Question' 

{ after(grammarAccess.getQuestionAccess().getQuestionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__1__Impl
	rule__Question__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getIsExclusiveAssignment_1()); }
(rule__Question__IsExclusiveAssignment_1)?
{ after(grammarAccess.getQuestionAccess().getIsExclusiveAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__2__Impl
	rule__Question__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getIsOptionalAssignment_2()); }
(rule__Question__IsOptionalAssignment_2)?
{ after(grammarAccess.getQuestionAccess().getIsOptionalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__3__Impl
	rule__Question__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getContentAssignment_3()); }
(rule__Question__ContentAssignment_3)
{ after(grammarAccess.getQuestionAccess().getContentAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__4__Impl
	rule__Question__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getQuestionAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__5__Impl
	rule__Question__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswersAssignment_5()); }
(rule__Question__AnswersAssignment_5)
{ after(grammarAccess.getQuestionAccess().getAnswersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__6__Impl
	rule__Question__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswersAssignment_6()); }
(rule__Question__AnswersAssignment_6)*
{ after(grammarAccess.getQuestionAccess().getAnswersAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Question__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Question__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Question__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getQuestionAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Content__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Content__Group__0__Impl
	rule__Content__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getContentAction_0()); }
(

)
{ after(grammarAccess.getContentAccess().getContentAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Content__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Content__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getBodyAssignment_1()); }
(rule__Content__BodyAssignment_1)?
{ after(grammarAccess.getContentAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Answer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__0__Impl
	rule__Answer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getAnswerKeyword_0()); }

	'Answer' 

{ after(grammarAccess.getAnswerAccess().getAnswerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__1__Impl
	rule__Answer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getGroup_1()); }
(rule__Answer__Group_1__0)?
{ after(grammarAccess.getAnswerAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__2__Impl
	rule__Answer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getContentAssignment_2()); }
(rule__Answer__ContentAssignment_2)
{ after(grammarAccess.getAnswerAccess().getContentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getGroup_3()); }
(rule__Answer__Group_3__0)?
{ after(grammarAccess.getAnswerAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Answer__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group_1__0__Impl
	rule__Answer__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIsFreeTextKeyword_1_0()); }

	'isFreeText' 

{ after(grammarAccess.getAnswerAccess().getIsFreeTextKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIsFreeTextAssignment_1_1()); }
(rule__Answer__IsFreeTextAssignment_1_1)
{ after(grammarAccess.getAnswerAccess().getIsFreeTextAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Answer__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group_3__0__Impl
	rule__Answer__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getAnswerAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group_3__1__Impl
	rule__Answer__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getFollowupAssignment_3_1()); }
(rule__Answer__FollowupAssignment_3_1)
{ after(grammarAccess.getAnswerAccess().getFollowupAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Answer__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Answer__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getAnswerAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Survey__IntroAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getIntroContentParserRuleCall_2_0()); }
	ruleContent{ after(grammarAccess.getSurveyAccess().getIntroContentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__QuestionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getQuestionsQuestionParserRuleCall_3_0()); }
	ruleQuestion{ after(grammarAccess.getSurveyAccess().getQuestionsQuestionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__QuestionsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getQuestionsQuestionParserRuleCall_4_0()); }
	ruleQuestion{ after(grammarAccess.getSurveyAccess().getQuestionsQuestionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Survey__OutroAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSurveyAccess().getOutroContentParserRuleCall_6_0()); }
	ruleContent{ after(grammarAccess.getSurveyAccess().getOutroContentParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__IsExclusiveAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getIsExclusiveExKeyword_1_0()); }
(
{ before(grammarAccess.getQuestionAccess().getIsExclusiveExKeyword_1_0()); }

	'ex' 

{ after(grammarAccess.getQuestionAccess().getIsExclusiveExKeyword_1_0()); }
)

{ after(grammarAccess.getQuestionAccess().getIsExclusiveExKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__IsOptionalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getIsOptionalOptKeyword_2_0()); }
(
{ before(grammarAccess.getQuestionAccess().getIsOptionalOptKeyword_2_0()); }

	'opt' 

{ after(grammarAccess.getQuestionAccess().getIsOptionalOptKeyword_2_0()); }
)

{ after(grammarAccess.getQuestionAccess().getIsOptionalOptKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__ContentAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getContentContentParserRuleCall_3_0()); }
	ruleContent{ after(grammarAccess.getQuestionAccess().getContentContentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__AnswersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswersAnswerParserRuleCall_5_0()); }
	ruleAnswer{ after(grammarAccess.getQuestionAccess().getAnswersAnswerParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Question__AnswersAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQuestionAccess().getAnswersAnswerParserRuleCall_6_0()); }
	ruleAnswer{ after(grammarAccess.getQuestionAccess().getAnswersAnswerParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Content__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getBodyEStringParserRuleCall_1_0()); }
	ruleEString{ after(grammarAccess.getContentAccess().getBodyEStringParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__IsFreeTextAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getIsFreeTextEStringParserRuleCall_1_1_0()); }
	ruleEString{ after(grammarAccess.getAnswerAccess().getIsFreeTextEStringParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__ContentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getContentContentParserRuleCall_2_0()); }
	ruleContent{ after(grammarAccess.getAnswerAccess().getContentContentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Answer__FollowupAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnswerAccess().getFollowupQuestionParserRuleCall_3_1_0()); }
	ruleQuestion{ after(grammarAccess.getAnswerAccess().getFollowupQuestionParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ANY_OTHER : .;


